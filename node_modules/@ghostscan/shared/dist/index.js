"use strict";
// GhostScan Personal - Shared Types and Utilities
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatDate = exports.getRiskColor = exports.calculateRiskScore = void 0;
// Utility functions
const calculateRiskScore = (apps) => {
    return apps.reduce((score, app) => {
        const riskMultiplier = {
            LOW: 1,
            MEDIUM: 2,
            HIGH: 3,
            CRITICAL: 4,
        };
        return score + riskMultiplier[app.riskLevel];
    }, 0);
};
exports.calculateRiskScore = calculateRiskScore;
const getRiskColor = (riskLevel) => {
    const colors = {
        LOW: '#10B981', // green
        MEDIUM: '#F59E0B', // yellow
        HIGH: '#EF4444', // red
        CRITICAL: '#7C2D12', // dark red
    };
    return colors[riskLevel] || '#6B7280';
};
exports.getRiskColor = getRiskColor;
const formatDate = (date) => {
    return new Intl.DateTimeFormat('en-US', {
        year: 'numeric',
        month: 'short',
        day: 'numeric',
    }).format(date);
};
exports.formatDate = formatDate;
//# sourceMappingURL=index.js.map