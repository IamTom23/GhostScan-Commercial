# Docker Compose for Cloudyx Security Dashboard Development Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cloudyx-postgres
    environment:
      POSTGRES_DB: cloudyx_security
      POSTGRES_USER: cloudyx
      POSTGRES_PASSWORD: cloudyx_dev_password
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - cloudyx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cloudyx -d cloudyx_security"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: cloudyx-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cloudyx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cloudyx-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cloudyx.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - cloudyx-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  cloudyx-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local